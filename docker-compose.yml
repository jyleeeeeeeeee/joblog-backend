services:
  joblog-redis:
    image: redis:7.2
    container_name: joblog-redis
    ports:
      - "6379:6379"
    restart: always
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
  joblog-mysql:
    image: mysql:8.0
    container_name: joblog-mysql
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always
  joblog-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: joblog-app
    depends_on:
      joblog-mysql:
        condition: service_healthy
      joblog-redis:
        condition: service_healthy
    ports:
      - "8080:8080"
    env_file: ${ENV_FILE}
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
    restart: always
  joblog-jenkins:
    build:
      context: .
      dockerfile: jenkins-docker.Dockerfile
    container_name: joblog-jenkins
    image: jenkins/jenkins:lts-jdk17
    ports:
      - "9090:8080"          # Jenkins 접근 포트 (localhost:9090)
    volumes:
      - jenkins-data:/var/jenkins_home  # Jenkins 설정 유지
      - /var/run/docker.sock:/var/run/docker.sock  # Docker 컨트롤 권한 부여
    restart: always
    user: root   # 권한 이슈 방지
    environment:
      - JAVA_OPTS=-Duser.timezone=Asia/Seoul
volumes:
  mysql-data:
  jenkins-data: